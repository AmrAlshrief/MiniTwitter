services:
  minitwitter.api:
    image: ${DOCKER_REGISTRY-}minitwitterapi
    ports:
      - "8180:8080"
      - "8181:8081"
    build:
      context: .
      dockerfile: MiniTwitter.API/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT
      - CONNECTIONSTRINGS__DEFAULTCONNECTION
      - JWT__KEY
      - CLOUDINARYSETTINGS__CLOUDNAME
      - CLOUDINARYSETTINGS__APIKEY
      - CLOUDINARYSETTINGS__APISECRET
      - REDIS_CONNECTION=redis:6379
      - Authentication__Google__ClientId=${GOOGLE_CLIENT_ID}
      - Authentication__Google__ClientSecret=${GOOGLE_CLIENT_SECRET}
    depends_on:
      - db
      - redis
    networks:
      - mini-twitter-net

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "YourStrong!Pass123"
      ACCEPT_EULA: "Y"
    ports:
      - "1533:1433"
    volumes:
      - sqlvolume:/var/opt/mssql
    networks:
      - mini-twitter-net
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - mini-twitter-net


  migrate:
    build:
      context: .
      dockerfile: MiniTwitter.API/Dockerfile
      target: migrate-env
    working_dir: /src/MiniTwitter.API
    command:
      [
        "dotnet", "ef", "database", "update",
        "--project", "../MiniTwitter.Data/MiniTwitter.Data.csproj",
        "--startup-project", "."
      ]
    environment:
      - ASPNETCORE_ENVIRONMENT
      - CONNECTIONSTRINGS__DEFAULTCONNECTION
      - JWT__KEY
      - CLOUDINARYSETTINGS__CLOUDNAME
      - CLOUDINARYSETTINGS__APIKEY
      - CLOUDINARYSETTINGS__APISECRET
      - SENDGRID__APIKEY
      - SENDGRID__FROM_EMAIL
      - SENDGRID__FROM_NAME- 
      - REDIS__CONNECTION=redis:6379
      - Authentication__Google__ClientId=${GOOGLE_CLIENT_ID}
      - Authentication__Google__ClientSecret=${GOOGLE_CLIENT_SECRET}

    depends_on:
      - db
      - redis
    networks:
      - mini-twitter-net

networks:
  mini-twitter-net:
    driver: bridge

volumes:
  sqlvolume: